# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build & Test Snapshot


on:
  push:
  pull_request:
  schedule:
    - cron: '0 1 * * *'
jobs:
  build:

    runs-on: ubuntu-20.04

    env:
      JMETER_VERSION: 5.5-SNAPSHOT

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-snapshot-v5-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-snapshot-v5

      - name: printenv
        run: printenv

      - name: Java version
        run: java -version

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew --stacktrace --console=verbose -x test build  -PjmeterVersion=$JMETER_VERSION -PjmeterSnapshot

      - name: Test with Gradle
        run: ./gradlew --stacktrace --console=verbose test  -PjmeterVersion=$JMETER_VERSION -PjmeterSnapshot

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if:   always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish artifact Test Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: '**/build/reports/**'